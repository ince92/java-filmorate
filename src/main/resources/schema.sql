CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME varchar(50)  NOT NULL
);
CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME varchar(50)  NOT NULL
);
CREATE TABLE IF NOT EXISTS FILMS
(   FILM_ID      bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_NAME    varchar(50)  NOT NULL,
    DESCRIPTION  varchar(500) NOT NULL,
    RELEASE_DATE date         NOT NULL,
    DURATION     bigint      NOT NULL,
    MPA INTEGER REFERENCES GENRES (GENRE_ID)
);
CREATE TABLE IF NOT EXISTS FILM_GENRES
(
    FILM_ID bigint REFERENCES FILMS (FILM_ID),
    GENRE_ID INTEGER REFERENCES GENRES (GENRE_ID),
    PRimary key(FILM_ID,GENRE_ID)
);

CREATE TABLE IF NOT EXISTS USERS
(   USER_ID   integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_NAME    varchar(50)  NOT NULL,
    EMAIL  varchar(100) NOT NULL,
    BIRTHDAY date         NOT NULL,
    LOGIN      varchar(50)  NOT NULL

);

CREATE TABLE IF NOT EXISTS LIKES
(
    FILM_ID bigint REFERENCES FILMS (FILM_ID),
    USER_ID  integer REFERENCES USERS (USER_ID),
    PRimary key(FILM_ID,USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS
(
    USER_ID integer ,
    FRIEND_ID integer ,
    foreign key (USER_ID) REFERENCES USERS (USER_ID),
    foreign key (FRIEND_ID) REFERENCES USERS (USER_ID),
    PRimary key(USER_ID,FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS EVENT_FEEDS
(
    TIMESTAMP TIMESTAMP ,
    USER_ID integer ,
    EVENT_TYPE varchar(255),
    OPERATION varchar(255),
    EVENT_ID integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ENTITY_ID integer
);
