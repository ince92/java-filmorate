CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME varchar(50)  NOT NULL
);
CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME varchar(50)  NOT NULL
);
CREATE TABLE IF NOT EXISTS DIRECTORS
(
    DIRECTOR_ID integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DIRECTOR_NAME varchar(100)  NOT NULL
);
CREATE TABLE IF NOT EXISTS FILMS
(   FILM_ID      bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_NAME    varchar(50)  NOT NULL,
    DESCRIPTION  varchar(500) NOT NULL,
    RELEASE_DATE date         NOT NULL,
    DURATION     bigint      NOT NULL,
    MPA INTEGER REFERENCES GENRES (GENRE_ID)
);
CREATE TABLE IF NOT EXISTS FILM_GENRES
(
    FILM_ID bigint REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    GENRE_ID INTEGER REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE,
    PRimary key(FILM_ID,GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_DIRECTORS
(
    FILM_ID bigint REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    DIRECTOR_ID INTEGER REFERENCES DIRECTORS (DIRECTOR_ID) ON DELETE CASCADE,
    PRimary key(FILM_ID,DIRECTOR_ID)
);

CREATE TABLE IF NOT EXISTS USERS
(   USER_ID   integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_NAME    varchar(50)  NOT NULL,
    EMAIL  varchar(100) NOT NULL,
    BIRTHDAY date         NOT NULL,
    LOGIN      varchar(50)  NOT NULL

);

CREATE TABLE IF NOT EXISTS LIKES
(
    FILM_ID bigint REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    USER_ID  integer REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    PRimary key(FILM_ID,USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS
(
    USER_ID integer ,
    FRIEND_ID integer ,
    foreign key (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    foreign key (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    PRimary key(USER_ID,FRIEND_ID)
);
CREATE TABLE IF NOT EXISTS REVIEWS
(
    REVIEW_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CONTENT varchar(200) NOT NULL,
    IS_POSITIVE boolean,
    USER_ID int NOT NULL,
    FILM_ID int NOT NULL,
    USEFUL int NOT NULL,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS REVIEWS_LIKE
(
    REVIEW_ID INT REFERENCES REVIEWS(REVIEW_ID) ON DELETE CASCADE,
    USER_ID INT REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    LIKES BOOLEAN NOT NULL,
    PRIMARY KEY (REVIEW_ID,USER_ID)
);
